---

- hosts: check.ci.ocaml.org
  name: Set up Docker
  roles:
    #    - docker
    - prometheus-node-exporter
    - deployer-key

- hosts: check.ci.ocaml.org
  name: Set up SwarmKit
  tasks:
    - docker_swarm:
        listen_addr: "127.0.0.1:2377"
        advertise_addr: "127.0.0.1:2377"

- hosts: check.ci.ocaml.org
  name: Configure check.ci.ocaml.org controller host
  tasks:
    - name: copy Docker secrets
      docker_secret:
        name: "{{ item }}"
        data: "{{ lookup('vars', item) | b64encode }}"
        data_is_b64: true
      loop:
        - opam-health-check-cap
    - name: create caddy directory
      file:
        path: /etc/caddy
        state: directory
    - name: configure Caddy
      template:
        src: caddy/check.ci.ocaml.org
        dest: /etc/caddy/Caddyfile
      notify:
        - restart caddy
    - name: set up stack
      docker_stack:
        name: infra
        prune: yes
        compose:
          - version: "3.8"
            services:
              caddy:
                image: caddy
                deploy:
                  mode: global
                ports:
                 - target: 80
                   published: 80
                   protocol: tcp
                   mode: host
                 - target: 443
                   published: 443
                   protocol: tcp
                   mode: host
                volumes:
                  - /etc/caddy:/etc/caddy:ro
                  - caddy_data:/data
                  - caddy_config:/config
              opam-health-check:
                image: ocurrent/opam-health-check:live
                deploy:
                  endpoint_mode: dnsrr
                command: --connect /run/secrets/opam-health-check-cap /data/main
                volumes:
                  - 'data:/data'
                  - 'config:/root/.config/opam-health-check'
                secrets:
                  - opam-health-check-cap
              opam-health-check-freebsd:
                image: ocurrent/opam-health-check:live
                deploy:
                  endpoint_mode: dnsrr
                command: --connect /run/secrets/opam-health-check-cap /data/freebsd
                volumes:
                  - 'data:/data'
                  - 'config:/root/.config/opam-health-check'
                secrets:
                  - opam-health-check-cap
              opam-health-check-windows:
                image: ocurrent/opam-health-check:live
                deploy:
                  endpoint_mode: dnsrr
                command: --connect /run/secrets/opam-health-check-cap /data/windows
                volumes:
                  - 'data:/data'
                  - 'config:/root/.config/opam-health-check'
                secrets:
                  - opam-health-check-cap
            volumes:
              data:
              config:
              caddy_data:
                external: true
              caddy_config:
            secrets:
              opam-health-check-cap:
                external: true
  handlers:
    - name: restart caddy
      shell:
        cmd: PS=$(docker ps --filter=label=com.docker.swarm.service.name=infra_caddy -q) && if [ -n "$PS" ] ; then docker exec -w /etc/caddy $PS caddy reload ; fi
